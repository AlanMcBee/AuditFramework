// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CodeCharm.Model.AuditFramework.T4Templates
{
    using System.Collections.Generic;
    using System.Data;
    using System.Data.EntityClient;
    using System.Linq;
    using CodeCharm.Data.AuditFramework;
    using CodeCharm.Entity.AuditFramework;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class CreateUpdateDeltaPriorTableProcedure : CreateUpdateDeltaPriorTableProcedureBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 9 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 
string currentVersionTrackIdName = _currentTrackingTable.ToString() + "ºTrackºId";
bool first;

SchemaDataSet schemaDataSet = _params.SchemaDataSet;
SchemaDataSet.SchemaPrimaryKeysDataTable primaryKeysTable = schemaDataSet.SchemaPrimaryKeys;
EnumerableRowCollection<SchemaDataSet.SchemaPrimaryKeysRow> primaryKeysRows = primaryKeysTable.AsEnumerable();
var primaryKeysQuery = from primaryKeysRow in primaryKeysRows
                       where primaryKeysRow.TABLE_SCHEMA.Equals(_schema, StringComparison.OrdinalIgnoreCase)
                       where primaryKeysRow.TABLE_NAME.Equals(_tableName, StringComparison.OrdinalIgnoreCase)
                       select primaryKeysRow;                   



            
            #line default
            #line hidden
            this.Write("IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N\'[");
            
            #line 23 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 23 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_priorTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("]\') AND type IN (N\'P\', N\'PC\'))\r\n    DROP PROCEDURE [");
            
            #line 24 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 24 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_priorTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("];\r\nGO\r\n\r\nCREATE PROCEDURE [");
            
            #line 27 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 27 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_priorTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("]\r\n  @");
            
            #line 28 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("     [BIGINT]\r\n, @PriorºTrackId    [BIGINT] = NULL OUTPUT\r\n, @AnyDelta \t\t[BIT] = " +
                    "0 OUTPUT\r\n");
            
            #line 31 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

foreach(SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
{   
            
            #line default
            #line hidden
            this.Write(", @PKº");
            
            #line 34 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 34 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.DataTypeWithDetail(primaryKeysRow, schemaDataSet.Columns)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 35 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

}	
            
            #line default
            #line hidden
            this.Write("AS\r\n\r\n/*\r\n    READ THIS BEFORE EDITING THIS CODE\r\n    ---------------------------" +
                    "-------\r\n    This code was automatically generated by the\r\n    HealthNet.Federal" +
                    "Services.Model.AuditFramework\r\n    project.\r\n    \r\n    If you modify this code, " +
                    "and then execute \r\n    the AuditFramework tool, your modifications\r\n    will be " +
                    "ignored and overwritten.\r\n    \r\n    Template: CreateUpdateDeltaPriorTableProcedu" +
                    "re.tt\r\n    \r\n    REMARKS\r\n    -------\r\n    This procedure is not meant to be cal" +
                    "led by users or applications\r\n    directly. It is only meant to be called by oth" +
                    "er Delta* procedures.\r\n    \r\n    This procedure creates a Delta record (in the t" +
                    "ables with the Δ symbol).\r\n    A Delta record contains a bitmask showing which f" +
                    "ields have \r\n    changed since the last recorded values of the fields.\r\n    \r\n  " +
                    "  This procedure must compare the current track record, using the current schema" +
                    " \r\n    version, against an earlier schema versions. Where the schema\r\n    has mi" +
                    "smatched fields (a field exists in the current version of the schema \r\n    but n" +
                    "ot the earlier), the missing field is treated as a NULL and compared \r\n    again" +
                    "st the existing field. If a field exists in an earlier version but not\r\n\tthe cur" +
                    "rent version, it is ignored (there is no place to store the bit).\r\n*/\r\n\r\n\tSET NO" +
                    "COUNT ON;\r\n\t\r\n    -- Find the TrackId of the most recent track/delta record (has" +
                    " PriorTrackId) in the current tracking table that matches the primary keys of th" +
                    "is entry\r\n\r\n    SELECT    TOP 1 @PriorºTrackId = [M].[TrackºId]\r\n        FROM   " +
                    " [");
            
            #line 74 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 74 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_priorTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("] AS [T]\r\n            INNER JOIN  [");
            
            #line 75 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[AuditMaster] AS [M]\r\n                    ON  [M].[TrackºId] = [T].[TrackºId]\r\n" +
                    "        WHERE   [M].[TrackºId] < @");
            
            #line 77 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 78 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 
foreach (SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
{   
            
            #line default
            #line hidden
            this.Write("            AND [T].[");
            
            #line 81 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("] = @PKº");
            
            #line 81 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 82 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write(@"        ORDER BY    [M].[TrackºId] DESC;

    -- Exit quickly if we did not find the earlier version in this version of the tracking table
    IF (@PriorºTrackId IS NULL)
        RETURN;

    -- Compare fields of that track record to the current track record and create the delta record
        
    -- Variables to store values for comparison
");
            
            #line 93 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("    DECLARE       @");
            
            #line 96 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 96 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.DataTypeAsVariable(targetColumn)));
            
            #line default
            #line hidden
            this.Write(";\r\n    DECLARE @Priorº");
            
            #line 97 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 97 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.DataTypeAsVariable(targetColumn)));
            
            #line default
            #line hidden
            this.Write(";\r\n    DECLARE @Deltaº");
            
            #line 98 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" [BIT];\r\n        \r\n");
            
            #line 100 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("  \r\n    \r\n    -- Get the values of the current record\r\n    SELECT\r\n");
            
            #line 105 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

first = true;
PushIndent("            ");
foreach(SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{
    Write(first ? "  " : ", ");
    WriteLine("@" + targetColumn.COLUMN_NAME + " = [" + targetColumn.COLUMN_NAME + "]");
    first = false;
}
PopIndent();

            
            #line default
            #line hidden
            this.Write("        FROM    ");
            
            #line 116 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_currentTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n        WHERE   [TrackºId] = @");
            
            #line 117 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n    -- Get Prior values for comparison (only those that are in the current s" +
                    "chema)\r\n    SELECT\r\n");
            
            #line 121 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 
List<string> priorTableColumnsList = (from column in schemaDataSet.Columns
                                      where column.TABLE_SCHEMA.Equals(_params.AuditingSchema, StringComparison.OrdinalIgnoreCase)
                                      where column.TABLE_NAME.Equals(_priorTrackingTable.ToString(), StringComparison.OrdinalIgnoreCase)
                                      select column.COLUMN_NAME).ToList();

first = true;
PushIndent("            ");
foreach(SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{
	if (priorTableColumnsList.Contains(targetColumn.COLUMN_NAME, StringComparer.OrdinalIgnoreCase))
    {
		Write(first ? "  " : ", ");
    	WriteLine("@Priorº" + targetColumn.COLUMN_NAME + " = [" + targetColumn.COLUMN_NAME + "]");
    	first = false;
	}
}
PopIndent();

            
            #line default
            #line hidden
            this.Write("        FROM    ");
            
            #line 140 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_priorTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n        WHERE   [TrackºId] = @PriorºTrackId;\r\n        \r\n    -- Set Delta bits\r\n" +
                    "");
            
            #line 144 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("    SET @Deltaº");
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" = CASE WHEN (@");
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" IS NULL AND @Priorº");
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" IS NULL) OR (@");
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" = @Priorº");
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.IsStringDataType(targetColumn) ? " COLLATE Latin1_General_BIN" : string.Empty));
            
            #line default
            #line hidden
            this.Write(" ) THEN 0 ELSE 1 END;\r\n\tSET @AnyDelta = CONVERT(BIT, CONVERT(INT, @AnyDelta) | CO" +
                    "NVERT(INT, @Deltaº");
            
            #line 148 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("));\r\n\t\r\n");
            
            #line 150 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("\r\n    -- Set bits for record with current version schema\r\n    INSERT  [");
            
            #line 154 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 154 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_currentTrackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("Δ]\r\n        (\r\n          [TrackºId]\r\n");
            
            #line 157 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 foreach(SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("        , [");
            
            #line 159 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 160 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("        )\r\n        VALUES\r\n        (\r\n          @");
            
            #line 165 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("               \r\n");
            
            #line 166 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("        , @Deltaº");
            
            #line 169 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 170 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaPriorTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("  \r\n        );\r\n                \r\nGO\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class CreateUpdateDeltaPriorTableProcedureBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
