// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CodeCharm.Model.AuditFramework.T4Templates
{
    using System.Data;
    using System.Data.EntityClient;
    using System.Linq;
    using CodeCharm.Data.AuditFramework;
    using CodeCharm.Entity.AuditFramework;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class CreateUpdateDeltaTableProcedure : CreateUpdateDeltaTableProcedureBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 8 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
string currentVersionTrackIdName = _trackingTable.ToString() + "ºTrackºId";
bool first;

SchemaDataSet schemaDataSet = _params.SchemaDataSet;
SchemaDataSet.SchemaPrimaryKeysDataTable primaryKeysTable = schemaDataSet.SchemaPrimaryKeys;
EnumerableRowCollection<SchemaDataSet.SchemaPrimaryKeysRow> primaryKeysRows = primaryKeysTable.AsEnumerable();
var primaryKeysQuery = from primaryKeysRow in primaryKeysRows
                       where primaryKeysRow.TABLE_SCHEMA.Equals(_schema, StringComparison.OrdinalIgnoreCase)
                       where primaryKeysRow.TABLE_NAME.Equals(_tableName, StringComparison.OrdinalIgnoreCase)
                       select primaryKeysRow;                   

IOrderedQueryable<Catalog> priorVersionTrackingTableQuery = null;
EntityConnectionStringBuilder connectionStringBuilder = Generator.GetEntityConnectionStringBuilder(_params);
AuditFrameworkEntities context = new AuditFrameworkEntities(connectionStringBuilder.ToString());
if (schemaDataSet.SchemaTables.TableExists(_params.AuditingSchema, "Catalog"))
{
    priorVersionTrackingTableQuery = from catalog in context.Catalogs
                                     where catalog.AuditedSchema.Equals(_schema, StringComparison.OrdinalIgnoreCase)
                                     where catalog.AuditedTableName.Equals(_tableName, StringComparison.OrdinalIgnoreCase)
                                     where catalog.Version < _trackingTable.Version
                                     where !catalog.Archived
                                     orderby catalog.Version descending
                                     select catalog;
}                   

            
            #line default
            #line hidden
            this.Write("IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N\'[");
            
            #line 34 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 34 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("]\') AND type IN (N\'P\', N\'PC\'))\r\n    DROP PROCEDURE [");
            
            #line 35 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 35 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("];\r\nGO\r\n\r\nCREATE PROCEDURE [");
            
            #line 38 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 38 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("]\r\n  @");
            
            #line 39 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("     [BIGINT]\r\n, @PriorºTrackId    [BIGINT] = NULL OUTPUT\r\nAS\r\n\r\n/*\r\n    READ THI" +
                    "S BEFORE EDITING THIS CODE\r\n    ----------------------------------\r\n    This cod" +
                    "e was automatically generated by the\r\n    CodeCharm.Model.AuditFramework\r\n    pr" +
                    "oject.\r\n    \r\n    If you modify this code, and then execute \r\n    the AuditFrame" +
                    "work tool, your modifications\r\n    will be ignored and overwritten.\r\n    \r\n    T" +
                    "emplate: CreateUpdateDeltaTableProcedure.tt\r\n    \r\n    REMARKS\r\n    -------\r\n   " +
                    " This procedure is not meant to be called by users or applications\r\n    directly" +
                    ". It is only meant to be called by the BuildDelta procedure.\r\n    \r\n    This pro" +
                    "cedure creates a Delta record (in the tables with the Δ symbol).\r\n    A Delta re" +
                    "cord contains a bitmask showing which fields have \r\n    changed since the last r" +
                    "ecorded values of the fields.\r\n    \r\n    A Baseline record will show all fields " +
                    "as having not changed (all False).\r\n    An Inserted or Deleted record will show " +
                    "all fields as having changed (all True).\r\n    Only the Updated records will show" +
                    " the evaluated changes for each field.\r\n    \r\n    This procedure must compare th" +
                    "e current track record, using the current schema \r\n    version, against potentia" +
                    "lly many earlier schema versions. Where the schema\r\n    has mismatched fields (a" +
                    " field exists in one version of the schema \r\n    but not the other), the missing" +
                    " field is treated as a NULL and compared \r\n    against the existing field.\r\n*/\r\n" +
                    "\r\n\t-- Track whether any changes were made at all\r\n\tDECLARE @AnyDelta [BIT]\r\n\tSET" +
                    " @AnyDelta = 0\t\r\n\r\n    -- Get the primary keys of this entry\r\n");
            
            #line 81 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
{   
            
            #line default
            #line hidden
            this.Write("    DECLARE @PKº");
            
            #line 84 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 84 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.DataTypeWithDetail(primaryKeysRow, schemaDataSet.Columns)));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 85 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
}   
            
            #line default
            #line hidden
            this.Write("    \r\n    SELECT\r\n");
            
            #line 89 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
first = true;
PushIndent("            ");
foreach(SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
{
    Write(first ? "  " : ", ");
    WriteLine("@PKº" + primaryKeysRow.COLUMN_NAME + " = [" + primaryKeysRow.COLUMN_NAME + "]");
    first = false;
}
PopIndent();

            
            #line default
            #line hidden
            this.Write("        FROM    [");
            
            #line 100 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 100 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("]\r\n        WHERE   [TrackºId] = @");
            
            #line 101 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write(";\r\n        \r\n    DECLARE @CurrentºAction [NCHAR](1);\r\n    SELECT  @CurrentºAction" +
                    " = [Action]\r\n        FROM    [");
            
            #line 105 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[AuditMaster]\r\n        WHERE   [TrackºId] = @");
            
            #line 106 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n    IF (@CurrentºAction = \'B\')\r\n    BEGIN\r\n\t\t-- New baselines are always set" +
                    " to all zeros\r\n\t\t-- to indicate no changes since previous entry (since there is " +
                    "no previous entry)\r\n        INSERT  [");
            
            #line 112 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 112 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("Δ]\r\n            (\r\n              [TrackºId]\r\n");
            
            #line 115 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("            , [");
            
            #line 118 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 119 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("          \r\n            )\r\n            VALUES\r\n            (\r\n              @");
            
            #line 124 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 125 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("            , 0\r\n");
            
            #line 129 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write(@"          
            );
			
		-- Even though we say that no changes happened in any fields,
		-- we always consider a baseline to be a change so that it appears in reports
		SET @AnyDelta = 1; 
    END
    ELSE IF (@CurrentºAction = 'D' OR @CurrentºAction = 'I')
    BEGIN
		-- New Delete and new Insert actions are always set to all ones
		-- to indicate that every field has been set (for inserts) or removed (for deletes)
        INSERT  [");
            
            #line 141 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 141 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("Δ]\r\n            (\r\n              [TrackºId]\r\n");
            
            #line 144 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("            , [");
            
            #line 147 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 148 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("          \r\n            )\r\n            VALUES\r\n            (\r\n              @");
            
            #line 153 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 154 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("            , 1\r\n");
            
            #line 158 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write(@"          
            );            
			
		SET @AnyDelta = 1; -- An Insert or Delete is always a change
    END
    ELSE
    BEGIN
        -- Process update action

        -- Find the TrackId of the most recent track/delta record in 
        -- the CURRENT tracking table that matches the primary keys of this entry
    
        SELECT    TOP 1 @PriorºTrackId = [M].[TrackºId]
            FROM    [");
            
            #line 172 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 172 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("] AS [T]\r\n                INNER JOIN  [");
            
            #line 173 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[AuditMaster] AS [M]\r\n                        ON  [M].[TrackºId] = [T].[TrackºI" +
                    "d]\r\n            WHERE   [M].[TrackºId] < @");
            
            #line 175 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 176 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
{   
            
            #line default
            #line hidden
            this.Write("                AND [T].[");
            
            #line 179 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("] = @PKº");
            
            #line 179 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 180 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write(@"            ORDER BY    [M].[TrackºId] DESC;

        -- If found, compare fields of that track record to the current track record and create the delta record, then return
        IF (@PriorºTrackId IS NOT NULL)
        BEGIN
            -- Variables to store values for comparison
");
            
            #line 188 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("            DECLARE       @");
            
            #line 191 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 191 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.DataTypeAsVariable(targetColumn)));
            
            #line default
            #line hidden
            this.Write(";\r\n            DECLARE @Priorº");
            
            #line 192 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 192 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.DataTypeAsVariable(targetColumn)));
            
            #line default
            #line hidden
            this.Write(";\r\n            DECLARE @Deltaº");
            
            #line 193 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" [BIT];\r\n        \r\n");
            
            #line 195 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("  \r\n    \r\n            -- Get the values of the current record\r\n            SELECT" +
                    "\r\n");
            
            #line 200 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
first = true;
PushIndent("                ");
foreach(SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{
    Write(first ? "  " : ", ");
    WriteLine("@" + targetColumn.COLUMN_NAME + " = [" + targetColumn.COLUMN_NAME + "]");
    first = false;
}
PopIndent();

            
            #line default
            #line hidden
            this.Write("                FROM    ");
            
            #line 211 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n                WHERE   [TrackºId] = @");
            
            #line 212 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n            -- Get Prior values for comparison\r\n            SELECT\r\n");
            
            #line 216 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
first = true;
PushIndent("                    ");
foreach(SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{
    Write(first ? "  " : ", ");
    WriteLine("@Priorº" + targetColumn.COLUMN_NAME + " = [" + targetColumn.COLUMN_NAME + "]");
    first = false;
}
PopIndent();

            
            #line default
            #line hidden
            this.Write("                FROM    ");
            
            #line 227 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n                WHERE   [TrackºId] = @PriorºTrackId;\r\n        \r\n            -- " +
                    "Set Delta bits\r\n");
            
            #line 231 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("            SET @Deltaº");
            
            #line 234 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" = CASE WHEN (@");
            
            #line 234 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" IS NULL AND @Priorº");
            
            #line 234 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" IS NULL) OR (@");
            
            #line 234 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write(" = @Priorº");
            
            #line 234 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            
            #line 234 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SchemaHelper.IsStringDataType(targetColumn) ? " COLLATE Latin1_General_BIN" : string.Empty));
            
            #line default
            #line hidden
            this.Write(" ) THEN 0 ELSE 1 END;\r\n\t\t\tSET @AnyDelta = CONVERT(BIT, CONVERT(INT, @AnyDelta) | " +
                    "CONVERT(INT, @Deltaº");
            
            #line 235 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("));\r\n\r\n");
            
            #line 237 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("\r\n            -- Set bits for record with current version schema\r\n            INS" +
                    "ERT  [");
            
            #line 241 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 241 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_trackingTable.ToString()));
            
            #line default
            #line hidden
            this.Write("Δ]\r\n                (\r\n                  [TrackºId]\r\n");
            
            #line 244 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 foreach(SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("                , [");
            
            #line 246 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("]\r\n");
            
            #line 247 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("                )\r\n                VALUES\r\n                (\r\n                  @" +
                    "");
            
            #line 252 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("               \r\n");
            
            #line 253 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
foreach (SchemaDataSet.ColumnsRow targetColumn in _targetTableColumns)
{   
            
            #line default
            #line hidden
            this.Write("                , @Deltaº");
            
            #line 256 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(targetColumn.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 257 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

}   
            
            #line default
            #line hidden
            this.Write("  \r\n                );\r\n                \r\n        END; -- set bits for record wit" +
                    "h current version schema\r\n                        \r\n");
            
            #line 263 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
if (null != priorVersionTrackingTableQuery)
{   
            
            #line default
            #line hidden
            this.Write("        -- Else, set bits for records with earlier version schemas\r\n        -- Go" +
                    " to the next earlier version of the tracking table and repeat above steps    \r\n");
            
            #line 268 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
  foreach (Catalog catalog in priorVersionTrackingTableQuery) // begin previous version search
    {   
            
            #line default
            #line hidden
            this.Write("        -- Check against ");
            
            #line 270 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(catalog.AuditingTableName));
            
            #line default
            #line hidden
            this.Write("\r\n        IF (@PriorºTrackId IS NULL)\r\n        BEGIN\r\n\t\t\t-- A prior track record " +
                    "has not yet been found\r\n\t\t\t-- Execute earlier delta procedures (will ignore drop" +
                    "ped fields and always compare new fields to NULL)\r\n            EXECUTE [");
            
            #line 275 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[Deltaº");
            
            #line 275 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(catalog.AuditingTableName));
            
            #line default
            #line hidden
            this.Write("]\r\n                  @");
            
            #line 276 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\t\t-- always compare against the current record      \r\n                , @PriorºTr" +
                    "ackId    OUTPUT\r\n\t\t\t\t, @AnyDelta\t\t\tOUTPUT\r\n");
            
            #line 279 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
      foreach (SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
        {   
            
            #line default
            #line hidden
            this.Write("                , @PKº");
            
            #line 281 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 282 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

        }   
            
            #line default
            #line hidden
            this.Write("                ;\r\n            \r\n        END;\r\n");
            
            #line 286 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
  } // end of previous version search
}

            
            #line default
            #line hidden
            this.Write(@"          
            
    END; -- process update action

	-- By this point, we might have a PriorTrackId value (not guaranteed)
    -- Set the PriorTrackºId field in the AuditMaster

    IF (@CurrentºAction = 'B' OR @CurrentºAction = 'I')
    BEGIN
        UPDATE  [");
            
            #line 297 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[AuditMaster]\r\n            SET   [PriorTrackºId] = @");
            
            #line 298 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t, [AnyDelta] = @AnyDelta\r\n            WHERE   [TrackºId] = @");
            
            #line 300 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write(";            \r\n    END\r\n    ELSE\r\n    BEGIN\r\n");
            
            #line 304 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

if (schemaDataSet.SchemaTables.TableExists(_params.AuditingSchema, "Catalog"))
{   
            
            #line default
            #line hidden
            this.Write("        -- For \'D\'elete actions (\'U\'pdate should already have found a PriorTrackI" +
                    "d)\r\n");
            
            #line 308 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

    priorVersionTrackingTableQuery = from catalog in context.Catalogs
                                     where catalog.AuditedSchema.Equals(_schema, StringComparison.OrdinalIgnoreCase)
                                     where catalog.AuditedTableName.Equals(_tableName, StringComparison.OrdinalIgnoreCase)
                                     where !catalog.Archived
                                     orderby catalog.Version descending
                                     select catalog;
    foreach (Catalog catalog in priorVersionTrackingTableQuery)
    {   
            
            #line default
            #line hidden
            this.Write("        IF (@PriorºTrackId IS NULL)\r\n        BEGIN\r\n            SELECT    TOP 1 @" +
                    "PriorºTrackId = [M].[TrackºId]\r\n                FROM    [");
            
            #line 320 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[");
            
            #line 320 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new TrackingTable(catalog.AuditedSchema, catalog.AuditedTableName, catalog.Version).ToString()));
            
            #line default
            #line hidden
            this.Write("] AS [T]\r\n                    INNER JOIN  [");
            
            #line 321 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[AuditMaster] AS [M]\r\n                            ON  [M].[TrackºId] = [T].[Tra" +
                    "ckºId]\r\n                WHERE   [M].[TrackºId] < @");
            
            #line 323 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 324 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
 
        foreach (SchemaDataSet.SchemaPrimaryKeysRow primaryKeysRow in primaryKeysQuery)
        {   
            
            #line default
            #line hidden
            this.Write("                    AND [T].[");
            
            #line 327 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("] = @PKº");
            
            #line 327 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primaryKeysRow.COLUMN_NAME));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 328 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

        }   
            
            #line default
            #line hidden
            this.Write("                ORDER BY    [M].[TrackºId] DESC;\r\n\r\n        END\r\n");
            
            #line 333 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"

    }   
}   
            
            #line default
            #line hidden
            this.Write("\r\n        UPDATE  [");
            
            #line 337 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_params.AuditingSchema));
            
            #line default
            #line hidden
            this.Write("].[AuditMaster]\r\n\t        SET   [PriorTrackºId] = @PriorºTrackId\r\n\t\t\t\t, [AnyDelta" +
                    "] = @AnyDelta\r\n            WHERE   [TrackºId] = @");
            
            #line 340 "C:\Users\mcbeea\Desktop\AuditFramework\Model.AuditFramework\T4Templates\CreateUpdateDeltaTableProcedure.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(currentVersionTrackIdName));
            
            #line default
            #line hidden
            this.Write(";\r\n    \r\n    END;\r\n\r\nGO\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class CreateUpdateDeltaTableProcedureBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
